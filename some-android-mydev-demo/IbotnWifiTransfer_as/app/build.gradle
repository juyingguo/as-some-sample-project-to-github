apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.ibotn.wifitransfer"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 101
        versionName "1.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        config {
            //加载资源
            Properties properties = new Properties()
            InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
            properties.load(inputStream)
            //读取字段
            def alias = properties.getProperty('KEY_ALIAS')
            def pwd = properties.getProperty('KEY_PWD')
            def storePwd = properties.getProperty('KEY_STORE_PWD')

            storeFile file(properties.getProperty('KEY_DIR'))
            keyAlias alias
            keyPassword pwd
            storePassword storePwd
        }
    }
    buildTypes {
        release {
            minifyEnabled false //TODO 正式发布时需要修改
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            outFileFormat(applicationVariants, defaultConfig, "release")
            debuggable true//TODO 正式发布时需要修改
        }
        debug {
            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'  }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    compile 'org.greenrobot:eventbus:3.1.1'
    compile 'io.reactivex.rxjava2:rxjava:2.2.0'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.2'
}

def static releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

def outFileFormat(applicationVariants, defaultConfig, str){
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = "IbotnWifiTransfer_${str}_V${defaultConfig.versionName}_${releaseTime()}.apk"
//                System.out.println(buildType.toString())
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}
